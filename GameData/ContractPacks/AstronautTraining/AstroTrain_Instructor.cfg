CONTRACT_TYPE
{
	name = AstroTrainInstructor
	title = Hire a @/instructorRole Instructor
	genericTitle = Hire a Training Instructor
	group = InstructorAstronautTraining
	description = We've noticed that you're missing a qualified @/instructorRole Instructor in your space program. We've found one that you can hire.
	genericDescription = Hire a new Training Instructor for your space program.
	synopsis = Hire a Training Instructor.
	completedMessage = Your new instructor has arrived and is settling in.
	agent = Kerbin Spaceflight School
	
	minExpiry = 1.0
	maxExpiry = 10.0
	prestige = Significant
	cancellable = false
	
	rewardScience = -240 / ContractMultiplier()
	rewardReputation = 0.0
	rewardFunds = 0
	failureReputation = 0
	failureFunds = 0
	advanceFunds = NextKerbalHireCost() * -3 / ContractMultiplier()

	DATA
	{
		type = List<Kerbal>
		requiredValue = false
		pilots = AllKerbals().Where(k => k.ExperienceTrait() == "Pilot" && k.ExperienceLevel() == 5 && k.Type() == "Crew")
		engineers = AllKerbals().Where(k => k.ExperienceTrait() == "Engineer" && k.ExperienceLevel() == 5 && k.Type() == "Crew")
		scientists = AllKerbals().Where(k => k.ExperienceTrait() == "Scientist" && k.ExperienceLevel() == 5 && k.Type() == "Crew")
	}
	
	DATA
	{
		type = string
		instructorRole = @/pilots.Count() == 0 ? "Flight" : @/engineers.Count() == 0 ? "Technical" : "Research"
		hidden = True
	}
	
	DATA
	{
		type = string
		instructorTrait = @/pilots.Count() == 0 ? "Pilot" : @/engineers.Count() == 0 ? "Engineer" : "Scientist"
		hidden = True
	}
	
	DATA
	{
		type = Kerbal
		hidden = true
		
		instructor = NewKerbalWithTrait(@/instructorTrait)
    }

	
	PARAMETER
	{
		name = RecoverKerbalInstructor
		type = RecoverKerbal
		kerbal = @/instructor
		title = Recover the new instructor at KSC.
	}
	
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal
		
		KERBAL
		{
			kerbal = @/instructor
			kerbalType = Crew
			owned = true
			addToRoster = true
			targetBody = Kerbin
			pqsCity = KSC
		}
	}
	
	BEHAVIOUR
	{
		name = LevelUpInstructor
		type = AwardExperience
		kerbal = @/instructor
		experience = 64
		awardImmediately = true
	}
	
	REQUIREMENT
	{
		name = NoQualifiedKerbals
		type = Expression
		expression = (@/pilots.Count() == 0 || @/engineers.Count() == 0 || @/scientists.Count() == 0)
		title = Must be lacking qualified instructors.
	}
	
	REQUIREMENT
	{
		name = ScienceCheck
		type = Science
		minScience = 240
		title = Must have at least 240 science points.
	}
	
	REQUIREMENT
	{
		name = UpgradedAstronautComplex
		type = Facility
		facility = AstronautComplex
		minLevel = 3
		title = Must have a level 3 Astronaut Complex.
	}
	
	REQUIREMENT
	{
		name = UpgradedRandD
		type = Facility
		facility = ResearchAndDevelopment
		minLevel = 2
		title = Must have a level 2 Research and Development facility.
	}
}